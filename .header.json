{
    "name": "Falling Duck",
    "meta": {},
    "editor": "blocksprj",
    "pubId": "",
    "pubCurrent": false,
    "target": "arcade",
    "targetVersion": "0.13.6",
    "tutorial": {
        "tutorial": "/tutorials/falling-duck",
        "tutorialName": "Falling Duck",
        "tutorialStep": 0,
        "tutorialReady": true,
        "tutorialHintCounter": 0,
        "tutorialStepInfo": [
            {
                "fullscreen": true,
                "unplugged": true,
                "tutorialCompleted": false,
                "headerContentMd": "迎歡來到聖公會李炳中學的電腦教室",
                "contentMd": "迎歡來到聖公會李炳中學的電腦教室\n\n今日本校會為你帶黎一個非常難忘既早上，希望透過今日的工作坊，讓你學懂一些簡單既編程。"
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "首先，在 ``||Sprites: Sprites||`` 中，將方塊 ``||variable: set mySprite to sprite... ||`` 放入 ``||loops:on start||`` 方塊之內。點擊 ``||sprites:sprite||`` 旁的灰色圖像，到 `Gallery` 選單中選擇小鴨圖案。",
                "contentMd": "首先，在 ``||Sprites: Sprites||`` 中，將方塊 ``||variable: set mySprite to sprite... ||`` 放入 ``||loops:on start||`` 方塊之內。點擊 ``||sprites:sprite||`` 旁的灰色圖像，到 `Gallery` 選單中選擇小鴨圖案。\n\n\n```blocks\nmySprite = sprites.create(img`\n    . . . . . . . . . . b 5 b . . .\n    . . . . . . . . . b 5 b . . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . . . . b b 5 d 1 f 5 5 d f . .\n    . . . . b 5 5 1 f f 5 d 4 c . .\n    . . . . b 5 5 d f b d d 4 4 . .\n    . b b b d 5 5 5 5 5 4 4 4 4 4 b\n    b d d d b b d 5 5 4 4 4 4 4 b .\n    b b d 5 5 5 b 5 5 5 5 5 5 b . .\n    c d c 5 5 5 5 d 5 5 5 5 5 5 b .\n    c b d c d 5 5 b 5 5 5 5 5 5 b .\n    . c d d c c b d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n    . . . . . . . . . . . . . . . .\n`, SpriteKind.Player)\n\n```",
                "hintContentMd": "```blocks\nmySprite = sprites.create(img`\n    . . . . . . . . . . b 5 b . . .\n    . . . . . . . . . b 5 b . . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . . . . b b 5 d 1 f 5 5 d f . .\n    . . . . b 5 5 1 f f 5 d 4 c . .\n    . . . . b 5 5 d f b d d 4 4 . .\n    . b b b d 5 5 5 5 5 4 4 4 4 4 b\n    b d d d b b d 5 5 4 4 4 4 4 b .\n    b b d 5 5 5 b 5 5 5 5 5 5 b . .\n    c d c 5 5 5 5 d 5 5 5 5 5 5 b .\n    c b d c d 5 5 b 5 5 5 5 5 5 b .\n    . c d d c c b d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n    . . . . . . . . . . . . . . . .\n`, SpriteKind.Player)\n\n```",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "1. 在 ``||scene: Scene||`` 中，將 ``||scene:set background color ||`` 拖到 ``||loops: on start||`` 之內\n2. 在 ``||scene: set background color ||`` 方塊中，將顏色設定為淺藍色\n3. 再將 ``||scene: start screen confetti effect ||`` 拖到 ``||loops: on start||`` 之內\n4. 在 ``||scene: start screen confetti effect ||`` 方塊中，將效果設定為 `blizzard`",
                "contentMd": "1. 在 ``||scene: Scene||`` 中，將 ``||scene:set background color ||`` 拖到 ``||loops: on start||`` 之內\n2. 在 ``||scene: set background color ||`` 方塊中，將顏色設定為淺藍色\n3. 再將 ``||scene: start screen confetti effect ||`` 拖到 ``||loops: on start||`` 之內\n4. 在 ``||scene: start screen confetti effect ||`` 方塊中，將效果設定為 `blizzard`\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\n```\n\n![set background](/static/tutorials/falling-duck/set_background.gif)",
                "hintContentMd": "```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\n```\n\n![set background](/static/tutorials/falling-duck/set_background.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的：改小鴨的初始位置改為螢幕的3分之1 \n\n在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||loops: on start||`` 內，在 ``||math: Math||`` 中拖拉 ``||math: 0 ÷ 0||`` 到 ``||sprites: set mySprite x to||`` 內，最後，在 ``||scene: Scene||`` 中拖拉 ``||scene: screen width||`` 到 ``||math: 0 ÷ 0||`` 中，並改之為 ``||math: screen width ÷ 3||``。",
                "contentMd": "### 目的：改小鴨的初始位置改為螢幕的3分之1 \n\n在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||loops: on start||`` 內，在 ``||math: Math||`` 中拖拉 ``||math: 0 ÷ 0||`` 到 ``||sprites: set mySprite x to||`` 內，最後，在 ``||scene: Scene||`` 中拖拉 ``||scene: screen width||`` 到 ``||math: 0 ÷ 0||`` 中，並改之為 ``||math: screen width ÷ 3||``。\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\n\n```\n\n![set sprite init location](/static/tutorials/falling-duck/set_sprite_init_location.gif)",
                "hintContentMd": "```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\n\n```\n\n![set sprite init location](/static/tutorials/falling-duck/set_sprite_init_location.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的：將小鴨向下加速值改為 300。\n\n同樣在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||loops:on start||`` 內，點擊 ``||sprites:x||`` ，揀選 ``||sprites:ay (acceleration y)||`` ，並將數值改為 `300`。",
                "contentMd": "### 目的：將小鴨向下加速值改為 300。\n\n同樣在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||loops:on start||`` 內，點擊 ``||sprites:x||`` ，揀選 ``||sprites:ay (acceleration y)||`` ，並將數值改為 `300`。\n\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\n```\n\n![set_sprite_falling](/static/tutorials/falling-duck/set_sprite_falling.gif)",
                "hintContentMd": "```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\n```\n\n![set_sprite_falling](/static/tutorials/falling-duck/set_sprite_falling.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 當按任何製時，將小鴨的速度改為 `-100` (負值向上)\n\n在 ``||Controller:Controller||`` 中拖拉 ``||controller: on A button pressed||``到主版面，並將 ``||controller:A||`` 改為 ``||controller:any||``。 然後，\n在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||controller: on any button pressed||`` 內，點擊 ``||sprites:x||`` ，揀選 ``||sprites:vy (velocity y)||`` ，並將數值改為 `-100`。完成後，請到右方版面進行測試。",
                "contentMd": "### 目的: 當按任何製時，將小鴨的速度改為 `-100` (負值向上)\n\n在 ``||Controller:Controller||`` 中拖拉 ``||controller: on A button pressed||``到主版面，並將 ``||controller:A||`` 改為 ``||controller:any||``。 然後，\n在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||controller: on any button pressed||`` 內，點擊 ``||sprites:x||`` ，揀選 ``||sprites:vy (velocity y)||`` ，並將數值改為 `-100`。完成後，請到右方版面進行測試。\n\n```blocks\nlet mySprite: Sprite = null\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\n```\n\n![press_button_to_fly](/static/tutorials/falling-duck/press_button_to_fly.gif)",
                "hintContentMd": "```blocks\nlet mySprite: Sprite = null\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\n```\n\n![press_button_to_fly](/static/tutorials/falling-duck/press_button_to_fly.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 建立 `createLogImage` function\n\n在 ``||Functions:Functions||`` 中，按 `make a function` 將 `function` 的名稱改為 `createLogImage` 。",
                "contentMd": "### 目的: 建立 `createLogImage` function\n\n在 ``||Functions:Functions||`` 中，按 `make a function` 將 `function` 的名稱改為 `createLogImage` 。\n\n```blocks\nfunction createLogImage () {}\n```\n\n![create_createLogImage_function](/static/tutorials/falling-duck/create_createLogImage_function.gif)",
                "hintContentMd": "```blocks\nfunction createLogImage () {}\n```\n\n![create_createLogImage_function](/static/tutorials/falling-duck/create_createLogImage_function.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 建立 `topLogImage` variable\n\n在 ``||variables: Variables||`` 中按 `make a variable`，並將 `variable` 的名稱改為 `topLogImage`，然後拖拉 ``||variables: set topLogImage to 0||`` 到 ``||functions:createLogImage||`` 中，到 ``||Images||`` 拖拉 `image` 到 ``||variables: set topLogImage to 0||`` 中，然後將圖改為一格上方樹。",
                "contentMd": "### 目的: 建立 `topLogImage` variable\n\n在 ``||variables: Variables||`` 中按 `make a variable`，並將 `variable` 的名稱改為 `topLogImage`，然後拖拉 ``||variables: set topLogImage to 0||`` 到 ``||functions:createLogImage||`` 中，到 ``||Images||`` 拖拉 `image` 到 ``||variables: set topLogImage to 0||`` 中，然後將圖改為一格上方樹。\n\n```blocks\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n}\n```\n\n![create_top_log_image](/static/tutorials/falling-duck/create_top_log_image.gif)",
                "hintContentMd": "```blocks\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n}\n```\n\n![create_top_log_image](/static/tutorials/falling-duck/create_top_log_image.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 建立 `bottomLogImage` variable。\n\n按右鍵 `duplicate` （複製）剛才做好的 ``||variables: set topLogImage ...||``，然後於 ``||variables: topLogImage ||`` 上按右鍵，揀選 `new variable`，將 `variable` 名稱改為 ``||variables:bottomLogImage||``，然後將圖為四格下方樹。",
                "contentMd": "### 目的: 建立 `bottomLogImage` variable。\n\n按右鍵 `duplicate` （複製）剛才做好的 ``||variables: set topLogImage ...||``，然後於 ``||variables: topLogImage ||`` 上按右鍵，揀選 `new variable`，將 `variable` 名稱改為 ``||variables:bottomLogImage||``，然後將圖為四格下方樹。\n\n```blocks\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n```\n\n![create_bottom_log_image](/static/tutorials/falling-duck/create_bottom_log_image.gif)",
                "hintContentMd": "```blocks\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n```\n\n![create_bottom_log_image](/static/tutorials/falling-duck/create_bottom_log_image.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 讓 `topLogImage` 及 `bottomLogImage` 移動。\n\n如步驟 6，建立 ``||functions:moveLogImage||`` function，然後到 ``||Sprites||`` 中，拖拉 ``||variable:set projectile ...  from side with ...||`` 到 ``||functions:moveLogImage||`` 內。在 ``||variable||`` 中，拖拉 ``||variable: topLogImage ||`` 到\n``||variable||`` 變數中。將 ``||sprite:vx||`` 的值改為 `-45`及``||sprite:vy||`` 的值改為 `0`",
                "contentMd": "### 目的: 讓 `topLogImage` 及 `bottomLogImage` 移動。\n\n如步驟 6，建立 ``||functions:moveLogImage||`` function，然後到 ``||Sprites||`` 中，拖拉 ``||variable:set projectile ...  from side with ...||`` 到 ``||functions:moveLogImage||`` 內。在 ``||variable||`` 中，拖拉 ``||variable: topLogImage ||`` 到\n``||variable||`` 變數中。將 ``||sprite:vx||`` 的值改為 `-45`及``||sprite:vy||`` 的值改為 `0`\n\n```blocks\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n}\n```\n\n![move_top_log_image](/static/tutorials/falling-duck/move_top_log_image.gif)",
                "hintContentMd": "```blocks\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n}\n```\n\n![move_top_log_image](/static/tutorials/falling-duck/move_top_log_image.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "如同之前所學的方法，拖拉 ``||sprites: set mySprite x to 0||`` ，將 ``||variables:mySprite||`` 改為 ``||variables:projectile||``，然後將 ``||sprites: top||`` 的值改為 `0`。\n\n複製 ``||variables:set projectile topLogImage from side with ...||`` 方塊及 ``||sprites:set projectile top to 0||`` 方塊。然後將 ``||variables:topLogImage||`` 改為 ``||variables:bottomLogImage||`` 及 ``||variable:projectile||`` ``||sprites:bottom||`` 的值改為 ``||scene:screen height||`` 。",
                "contentMd": "如同之前所學的方法，拖拉 ``||sprites: set mySprite x to 0||`` ，將 ``||variables:mySprite||`` 改為 ``||variables:projectile||``，然後將 ``||sprites: top||`` 的值改為 `0`。\n\n複製 ``||variables:set projectile topLogImage from side with ...||`` 方塊及 ``||sprites:set projectile top to 0||`` 方塊。然後將 ``||variables:topLogImage||`` 改為 ``||variables:bottomLogImage||`` 及 ``||variable:projectile||`` ``||sprites:bottom||`` 的值改為 ``||scene:screen height||`` 。\n\n \n```blocks\nfunction moveLogImage () {\n    let projectile: Sprite = null\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\n\n```\n\n![move_bottom_log_image](/static/tutorials/falling-duck/move_bottom_log_image.gif)",
                "hintContentMd": "```blocks\nfunction moveLogImage () {\n    let projectile: Sprite = null\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\n\n```\n\n![move_bottom_log_image](/static/tutorials/falling-duck/move_bottom_log_image.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "在 ``||game:Game||`` 中，拖拉  ``||game:on game update every 500 ms||`` 到主版，將數值改為 `1500`。到 ``||functions:Function||`` 中，將 ``||functions:call createLogImage||`` 及 ``||functions:call moveLogImage||`` 拖接到 ``||game:on game update every 1500 ms||`` 內。\n\n在 ``||info:Info||`` 中拖拉 ``||info:\bchange score by 1 ||`` 到 ``||game:on game update every 1500 ms||`` 方塊之中。\n\n完成後，請到右方版面測試結果。",
                "contentMd": "在 ``||game:Game||`` 中，拖拉  ``||game:on game update every 500 ms||`` 到主版，將數值改為 `1500`。到 ``||functions:Function||`` 中，將 ``||functions:call createLogImage||`` 及 ``||functions:call moveLogImage||`` 拖接到 ``||game:on game update every 1500 ms||`` 內。\n\n在 ``||info:Info||`` 中拖拉 ``||info:\bchange score by 1 ||`` 到 ``||game:on game update every 1500 ms||`` 方塊之中。\n\n完成後，請到右方版面測試結果。\n\n```blocks\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\nlet projectile: Sprite = null\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n\n```\n\n![set_update_on_interval](/static/tutorials/falling-duck/set_update_on_interval.gif)",
                "hintContentMd": "```blocks\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\nlet projectile: Sprite = null\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n\n```\n\n![set_update_on_interval](/static/tutorials/falling-duck/set_update_on_interval.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 製作隨機背境I\n\n先將 ``||functions: createLogImage||`` 拖到更大的空間。在 ``||variables:Variables||`` 建立 ``||variables:logType||`` variable，然後拖拉 ``||variables: set mySprite to 0 ||`` 到 ``||functions: createLogImage||`` 內。將 ``||variables:mySprite||`` 改為 ``||variables:logType||``。\n\n在 ``||math:Math||`` 中，拖拉 ``||math:pick random 0 to 10||`` 到 ``||variables: set logType to 0 ||`` 的 ``||variables:0 ||`` 上，並將之改為 ``||math:pick random 0 to 3||``。",
                "contentMd": "### 目的: 製作隨機背境I\n\n先將 ``||functions: createLogImage||`` 拖到更大的空間。在 ``||variables:Variables||`` 建立 ``||variables:logType||`` variable，然後拖拉 ``||variables: set mySprite to 0 ||`` 到 ``||functions: createLogImage||`` 內。將 ``||variables:mySprite||`` 改為 ``||variables:logType||``。\n\n在 ``||math:Math||`` 中，拖拉 ``||math:pick random 0 to 10||`` 到 ``||variables: set logType to 0 ||`` 的 ``||variables:0 ||`` 上，並將之改為 ``||math:pick random 0 to 3||``。\n\n```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n```\n\n![create_logType_variable](/static/tutorials/falling-duck/create_logType_variable.gif)",
                "hintContentMd": "```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n```\n\n![create_logType_variable](/static/tutorials/falling-duck/create_logType_variable.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的: 製作隨機背境 II\n\n在 ``||logic:Logic||`` 中，拖拉 ``||logic:if true then||``，到 ``||functions: createLogImage||`` 中，使得這個方塊包著 ``||variables: set topLogImage to ... ||`` 及 ``||variables: set bottomLogImage to ... ||`` 。\n\n在 ``||logic:Logic||`` 中拖拉 ``||logic:0 = 0||`` 到 ``||logic:if true then||`` 的 ``||logic:true||`` 中，並在 ``||variables:Variables||`` 中，拖拉 ``||variables:logType||`` 到 ``||logic: 0 = 0 ||`` 中，將成改成 ``||logic: logType = 0 ||``。\n\n然後複製 ``||logic:if logType = 0 then||`` 3次，並按下表將修改數值及圖案。",
                "contentMd": "### 目的: 製作隨機背境 II\n\n在 ``||logic:Logic||`` 中，拖拉 ``||logic:if true then||``，到 ``||functions: createLogImage||`` 中，使得這個方塊包著 ``||variables: set topLogImage to ... ||`` 及 ``||variables: set bottomLogImage to ... ||`` 。\n\n在 ``||logic:Logic||`` 中拖拉 ``||logic:0 = 0||`` 到 ``||logic:if true then||`` 的 ``||logic:true||`` 中，並在 ``||variables:Variables||`` 中，拖拉 ``||variables:logType||`` 到 ``||logic: 0 = 0 ||`` 中，將成改成 ``||logic: logType = 0 ||``。\n\n然後複製 ``||logic:if logType = 0 then||`` 3次，並按下表將修改數值及圖案。\n\n![logType_table](/static/logType_table.png)\n\n```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\n```\n\n![create_all_random_logs](/static/tutorials/falling-duck/create_all_random_logs.gif)",
                "hintContentMd": "![logType_table](/static/logType_table.png)\n\n```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\n```\n\n![create_all_random_logs](/static/tutorials/falling-duck/create_all_random_logs.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的：當小鴨的頂部及底部觸碰到螢幕外框時，遊戲結束\n\n在 ``||game: Game||`` 中，拖拉 ``||game: on update||`` 到主版上，拖拉 ``||logic:if true then||`` 到 ``||game: on update||`` 中，並在 ``||game:Game||`` 中拖拉 ``||game:game over LOSE||`` 方塊到 ``||logic:if true then||`` 中。 \n\n試試按下圖所示，將 ``||logic: true||`` 的值改為 ``||logic: mySprite top < 0 or mySprite bottom > screen height||``",
                "contentMd": "### 目的：當小鴨的頂部及底部觸碰到螢幕外框時，遊戲結束\n\n在 ``||game: Game||`` 中，拖拉 ``||game: on update||`` 到主版上，拖拉 ``||logic:if true then||`` 到 ``||game: on update||`` 中，並在 ``||game:Game||`` 中拖拉 ``||game:game over LOSE||`` 方塊到 ``||logic:if true then||`` 中。 \n\n試試按下圖所示，將 ``||logic: true||`` 的值改為 ``||logic: mySprite top < 0 or mySprite bottom > screen height||``\n\n```blocks\ngame.onUpdate(function () {\n    let mySprite: Sprite = 0\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n```\n\n![game_over_1](/static/tutorials/falling-duck/game_over_1.gif)",
                "hintContentMd": "```blocks\ngame.onUpdate(function () {\n    let mySprite: Sprite = 0\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n```\n\n![game_over_1](/static/tutorials/falling-duck/game_over_1.gif)",
                "hasHint": true
            },
            {
                "fullscreen": true,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "### 目的：當小鴨觸碰樹木時，遊戲結束 @fullscreen\n\n在 ``||sprites:Sprite||`` 中，拖拉 ``||sprites:on sprite of kind of player ...||`` 到主版中，將 ``||sprites: ... otherSprite of kind player||`` 改為 ``||sprites: ... otherSprite of kind projectile||``，並將 ``||game: Game over LOSE||`` 拖到這個方塊之內。",
                "contentMd": "### 目的：當小鴨觸碰樹木時，遊戲結束 @fullscreen\n\n在 ``||sprites:Sprite||`` 中，拖拉 ``||sprites:on sprite of kind of player ...||`` 到主版中，將 ``||sprites: ... otherSprite of kind player||`` 改為 ``||sprites: ... otherSprite of kind projectile||``，並將 ``||game: Game over LOSE||`` 拖到這個方塊之內。\n\n```blocks\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\n```\n\n![game_over_2](/static/tutorials/falling-duck/game_over_2.gif)",
                "hintContentMd": "```blocks\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\n```\n\n![game_over_2](/static/tutorials/falling-duck/game_over_2.gif)",
                "hasHint": true
            },
            {
                "fullscreen": false,
                "unplugged": false,
                "tutorialCompleted": false,
                "headerContentMd": "```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nlet projectile: Sprite = null\nlet bottomLogImage: Image = null\nlet topLogImage: Image = null\nlet logType = 0\nlet mySprite: Sprite = null\nmySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\ngame.onUpdate(function () {\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})",
                "contentMd": "```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nlet projectile: Sprite = null\nlet bottomLogImage: Image = null\nlet topLogImage: Image = null\nlet logType = 0\nlet mySprite: Sprite = null\nmySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\ngame.onUpdate(function () {\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n\n```",
                "hintContentMd": "```",
                "hasHint": true
            }
        ],
        "tutorialMd": "# Falling Duck\n\n### ~button /#tutorial:/tutorials/falling-duck\n\nTry this tutorial!\n\n### ~\n\n## 簡介 @unplugged\n\n迎歡來到聖公會李炳中學的電腦教室\n\n今日本校會為你帶黎一個非常難忘既早上，希望透過今日的工作坊，讓你學懂一些簡單既編程。\n\n## 步驟 1: 創造一個角式@fullscreen\n\n首先，在 ``||Sprites: Sprites||`` 中，將方塊 ``||variable: set mySprite to sprite... ||`` 放入 ``||loops:on start||`` 方塊之內。點擊 ``||sprites:sprite||`` 旁的灰色圖像，到 `Gallery` 選單中選擇小鴨圖案。\n\n\n```blocks\nmySprite = sprites.create(img`\n    . . . . . . . . . . b 5 b . . .\n    . . . . . . . . . b 5 b . . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . . . . b b 5 d 1 f 5 5 d f . .\n    . . . . b 5 5 1 f f 5 d 4 c . .\n    . . . . b 5 5 d f b d d 4 4 . .\n    . b b b d 5 5 5 5 5 4 4 4 4 4 b\n    b d d d b b d 5 5 4 4 4 4 4 b .\n    b b d 5 5 5 b 5 5 5 5 5 5 b . .\n    c d c 5 5 5 5 d 5 5 5 5 5 5 b .\n    c b d c d 5 5 b 5 5 5 5 5 5 b .\n    . c d d c c b d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n    . . . . . . . . . . . . . . . .\n`, SpriteKind.Player)\n\n```\n\n## 步驟 2: 設定背境圖案 @fullscreen\n\n1. 在 ``||scene: Scene||`` 中，將 ``||scene:set background color ||`` 拖到 ``||loops: on start||`` 之內\n2. 在 ``||scene: set background color ||`` 方塊中，將顏色設定為淺藍色\n3. 再將 ``||scene: start screen confetti effect ||`` 拖到 ``||loops: on start||`` 之內\n4. 在 ``||scene: start screen confetti effect ||`` 方塊中，將效果設定為 `blizzard`\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\n```\n\n![set background](/static/tutorials/falling-duck/set_background.gif)\n\n## 步驟 3： 設定小鴨的初始位置 @fullscreen\n\n### 目的：改小鴨的初始位置改為螢幕的3分之1 \n\n在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||loops: on start||`` 內，在 ``||math: Math||`` 中拖拉 ``||math: 0 ÷ 0||`` 到 ``||sprites: set mySprite x to||`` 內，最後，在 ``||scene: Scene||`` 中拖拉 ``||scene: screen width||`` 到 ``||math: 0 ÷ 0||`` 中，並改之為 ``||math: screen width ÷ 3||``。\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\n\n```\n\n![set sprite init location](/static/tutorials/falling-duck/set_sprite_init_location.gif)\n\n\n## 步驟 4: 讓小鴨下墮 @fullscreen\n\n### 目的：將小鴨向下加速值改為 300。\n\n同樣在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||loops:on start||`` 內，點擊 ``||sprites:x||`` ，揀選 ``||sprites:ay (acceleration y)||`` ，並將數值改為 `300`。\n\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\n```\n\n![set_sprite_falling](/static/tutorials/falling-duck/set_sprite_falling.gif)\n\n## 步驟 5: 讓小鴨飛 @fullscreen\n\n### 目的: 當按任何製時，將小鴨的速度改為 `-100` (負值向上)\n\n在 ``||Controller:Controller||`` 中拖拉 ``||controller: on A button pressed||``到主版面，並將 ``||controller:A||`` 改為 ``||controller:any||``。 然後，\n在 ``||sprites:Sprites||`` 中拖拉 ``||sprites: set mySprite x to 0||`` 到 ``||controller: on any button pressed||`` 內，點擊 ``||sprites:x||`` ，揀選 ``||sprites:vy (velocity y)||`` ，並將數值改為 `-100`。完成後，請到右方版面進行測試。\n\n```blocks\nlet mySprite: Sprite = null\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\n```\n\n![press_button_to_fly](/static/tutorials/falling-duck/press_button_to_fly.gif)\n\n\n## 步驟 6: 設定背境物件 I @fullscreen\n\n### 目的: 建立 `createLogImage` function\n\n在 ``||Functions:Functions||`` 中，按 `make a function` 將 `function` 的名稱改為 `createLogImage` 。\n\n```blocks\nfunction createLogImage () {}\n```\n\n![create_createLogImage_function](/static/tutorials/falling-duck/create_createLogImage_function.gif)\n\n## 步驟 7: 設定背境物件 II @fullscreen\n\n### 目的: 建立 `topLogImage` variable\n\n在 ``||variables: Variables||`` 中按 `make a variable`，並將 `variable` 的名稱改為 `topLogImage`，然後拖拉 ``||variables: set topLogImage to 0||`` 到 ``||functions:createLogImage||`` 中，到 ``||Images||`` 拖拉 `image` 到 ``||variables: set topLogImage to 0||`` 中，然後將圖改為一格上方樹。\n\n```blocks\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n}\n```\n\n![create_top_log_image](/static/tutorials/falling-duck/create_top_log_image.gif)\n\n## 步驟 8: 設定背境物件 III @fullscreen\n\n### 目的: 建立 `bottomLogImage` variable。\n\n按右鍵 `duplicate` （複製）剛才做好的 ``||variables: set topLogImage ...||``，然後於 ``||variables: topLogImage ||`` 上按右鍵，揀選 `new variable`，將 `variable` 名稱改為 ``||variables:bottomLogImage||``，然後將圖為四格下方樹。\n\n```blocks\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n```\n\n![create_bottom_log_image](/static/tutorials/falling-duck/create_bottom_log_image.gif)\n\n\n## 步驟 9: 設定背境物件 IV @fullscreen\n\n### 目的: 讓 `topLogImage` 及 `bottomLogImage` 移動。\n\n如步驟 6，建立 ``||functions:moveLogImage||`` function，然後到 ``||Sprites||`` 中，拖拉 ``||variable:set projectile ...  from side with ...||`` 到 ``||functions:moveLogImage||`` 內。在 ``||variable||`` 中，拖拉 ``||variable: topLogImage ||`` 到\n``||variable||`` 變數中。將 ``||sprite:vx||`` 的值改為 `-45`及``||sprite:vy||`` 的值改為 `0`\n\n```blocks\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n}\n```\n\n![move_top_log_image](/static/tutorials/falling-duck/move_top_log_image.gif)\n\n\n## 步驟 10: 設定背境物件 V @fullscreen\n\n如同之前所學的方法，拖拉 ``||sprites: set mySprite x to 0||`` ，將 ``||variables:mySprite||`` 改為 ``||variables:projectile||``，然後將 ``||sprites: top||`` 的值改為 `0`。\n\n複製 ``||variables:set projectile topLogImage from side with ...||`` 方塊及 ``||sprites:set projectile top to 0||`` 方塊。然後將 ``||variables:topLogImage||`` 改為 ``||variables:bottomLogImage||`` 及 ``||variable:projectile||`` ``||sprites:bottom||`` 的值改為 ``||scene:screen height||`` 。\n\n \n```blocks\nfunction moveLogImage () {\n    let projectile: Sprite = null\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\n\n```\n\n![move_bottom_log_image](/static/tutorials/falling-duck/move_bottom_log_image.gif)\n\n\n## 步驟 11: 設定背境物件 VI @fullscreen\n\n在 ``||game:Game||`` 中，拖拉  ``||game:on game update every 500 ms||`` 到主版，將數值改為 `1500`。到 ``||functions:Function||`` 中，將 ``||functions:call createLogImage||`` 及 ``||functions:call moveLogImage||`` 拖接到 ``||game:on game update every 1500 ms||`` 內。\n\n在 ``||info:Info||`` 中拖拉 ``||info:\bchange score by 1 ||`` 到 ``||game:on game update every 1500 ms||`` 方塊之中。\n\n完成後，請到右方版面測試結果。\n\n```blocks\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\nlet projectile: Sprite = null\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n\n```\n\n![set_update_on_interval](/static/tutorials/falling-duck/set_update_on_interval.gif)\n\n## 步驟 12: 設定背境物件 VII @fullscreen\n\n### 目的: 製作隨機背境I\n\n先將 ``||functions: createLogImage||`` 拖到更大的空間。在 ``||variables:Variables||`` 建立 ``||variables:logType||`` variable，然後拖拉 ``||variables: set mySprite to 0 ||`` 到 ``||functions: createLogImage||`` 內。將 ``||variables:mySprite||`` 改為 ``||variables:logType||``。\n\n在 ``||math:Math||`` 中，拖拉 ``||math:pick random 0 to 10||`` 到 ``||variables: set logType to 0 ||`` 的 ``||variables:0 ||`` 上，並將之改為 ``||math:pick random 0 to 3||``。\n\n```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n```\n\n![create_logType_variable](/static/tutorials/falling-duck/create_logType_variable.gif)\n\n## 步驟 13: 設定背境物件 VIII @fullscreen\n\n### 目的: 製作隨機背境 II\n\n在 ``||logic:Logic||`` 中，拖拉 ``||logic:if true then||``，到 ``||functions: createLogImage||`` 中，使得這個方塊包著 ``||variables: set topLogImage to ... ||`` 及 ``||variables: set bottomLogImage to ... ||`` 。\n\n在 ``||logic:Logic||`` 中拖拉 ``||logic:0 = 0||`` 到 ``||logic:if true then||`` 的 ``||logic:true||`` 中，並在 ``||variables:Variables||`` 中，拖拉 ``||variables:logType||`` 到 ``||logic: 0 = 0 ||`` 中，將成改成 ``||logic: logType = 0 ||``。\n\n然後複製 ``||logic:if logType = 0 then||`` 3次，並按下表將修改數值及圖案。\n\n![logType_table](/static/logType_table.png)\n\n```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\n```\n\n![create_all_random_logs](/static/tutorials/falling-duck/create_all_random_logs.gif)\n\n\n## 步驟 14: 設定死亡條件 I @fullscreen\n\n### 目的：當小鴨的頂部及底部觸碰到螢幕外框時，遊戲結束\n\n在 ``||game: Game||`` 中，拖拉 ``||game: on update||`` 到主版上，拖拉 ``||logic:if true then||`` 到 ``||game: on update||`` 中，並在 ``||game:Game||`` 中拖拉 ``||game:game over LOSE||`` 方塊到 ``||logic:if true then||`` 中。 \n\n試試按下圖所示，將 ``||logic: true||`` 的值改為 ``||logic: mySprite top < 0 or mySprite bottom > screen height||``\n\n```blocks\ngame.onUpdate(function () {\n    let mySprite: Sprite = 0\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n```\n\n![game_over_1](/static/tutorials/falling-duck/game_over_1.gif)\n\n## 步驟 14: 設定死亡條件 II @fullscreen\n\n### 目的：當小鴨觸碰樹木時，遊戲結束 @fullscreen\n\n在 ``||sprites:Sprite||`` 中，拖拉 ``||sprites:on sprite of kind of player ...||`` 到主版中，將 ``||sprites: ... otherSprite of kind player||`` 改為 ``||sprites: ... otherSprite of kind projectile||``，並將 ``||game: Game over LOSE||`` 拖到這個方塊之內。\n\n```blocks\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\n```\n\n![game_over_2](/static/tutorials/falling-duck/game_over_2.gif)\n\n\n\n## Final Product\n\n```blocks\nfunction createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nlet projectile: Sprite = null\nlet bottomLogImage: Image = null\nlet topLogImage: Image = null\nlet logType = 0\nlet mySprite: Sprite = null\nmySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\ngame.onUpdate(function () {\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n\n```\n\n",
        "tutorialCode": "\n { \n mySprite = sprites.create(img`\n    . . . . . . . . . . b 5 b . . .\n    . . . . . . . . . b 5 b . . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . . . . b b 5 d 1 f 5 5 d f . .\n    . . . . b 5 5 1 f f 5 d 4 c . .\n    . . . . b 5 5 d f b d d 4 4 . .\n    . b b b d 5 5 5 5 5 4 4 4 4 4 b\n    b d d d b b d 5 5 4 4 4 4 4 b .\n    b b d 5 5 5 b 5 5 5 5 5 5 b . .\n    c d c 5 5 5 5 d 5 5 5 5 5 5 b .\n    c b d c d 5 5 b 5 5 5 5 5 5 b .\n    . c d d c c b d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n    . . . . . . . . . . . . . . . .\n`, SpriteKind.Player)\n } \n\n { \n let mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\n } \n\n { \n let mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\n } \n\n { \n let mySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\n } \n\n { \n let mySprite: Sprite = null\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\n } \n\n { \n function createLogImage () {}\n } \n\n { \n function createLogImage () {\n    topLogImage = sprites.duck.log5\n}\n } \n\n { \n function createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n } \n\n { \n function moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n}\n } \n\n { \n function moveLogImage () {\n    let projectile: Sprite = null\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\n } \n\n { \n game.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\nlet projectile: Sprite = null\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nfunction createLogImage () {\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n } \n\n { \n function createLogImage () {\n    logType = Math.randomRange(0, 3)\n    topLogImage = sprites.duck.log5\n    bottomLogImage = sprites.duck.log4\n}\n } \n\n { \n function createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\n } \n\n { \n game.onUpdate(function () {\n    let mySprite: Sprite = 0\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n } \n\n { \n sprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\n } \n\n { \n function createLogImage () {\n    logType = Math.randomRange(0, 3)\n    if (logType == 0) {\n        topLogImage = sprites.duck.log5\n        bottomLogImage = sprites.duck.log4\n    }\n    if (logType == 1) {\n        topLogImage = sprites.duck.log6\n        bottomLogImage = sprites.duck.log3\n    }\n    if (logType == 2) {\n        topLogImage = sprites.duck.log7\n        bottomLogImage = sprites.duck.log2\n    }\n    if (logType == 3) {\n        topLogImage = sprites.duck.log8\n        bottomLogImage = sprites.duck.log1\n    }\n}\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed, function () {\n    mySprite.vy = -100\n})\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Projectile, function (sprite, otherSprite) {\n    game.over(false)\n})\nfunction moveLogImage () {\n    projectile = sprites.createProjectileFromSide(topLogImage, -45, 0)\n    projectile.top = 0\n    projectile = sprites.createProjectileFromSide(bottomLogImage, -45, 0)\n    projectile.bottom = scene.screenHeight()\n}\nlet projectile: Sprite = null\nlet bottomLogImage: Image = null\nlet topLogImage: Image = null\nlet logType = 0\nlet mySprite: Sprite = null\nmySprite = sprites.create(img`\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . . . . . . . .\n    . . . . . . . . . b 5 5 b . . .\n    . . . . . . b b b b b b . . . .\n    . . . . . b b 5 5 5 5 5 b . . .\n    . b b b b b 5 5 5 5 5 5 5 b . .\n    . b d 5 b 5 5 5 5 5 5 5 5 b . .\n    . . b 5 5 b 5 d 1 f 5 d 4 f . .\n    . . b d 5 5 b 1 f f 5 4 4 c . .\n    b b d b 5 5 5 d f b 4 4 4 4 b .\n    b d d c d 5 5 b 5 4 4 4 4 4 4 b\n    c d d d c c b 5 5 5 5 5 5 5 b .\n    c b d d d d d 5 5 5 5 5 5 5 b .\n    . c d d d d d d 5 5 5 5 5 d b .\n    . . c b d d d d d 5 5 5 b b . .\n    . . . c c c c c c c c b b . . .\n`, SpriteKind.Player)\nscene.setBackgroundColor(9)\neffects.blizzard.startScreenEffect()\nmySprite.x = scene.screenWidth() / 3\nmySprite.ay = 300\ngame.onUpdateInterval(1500, function () {\n    info.changeScoreBy(1)\n    createLogImage()\n    moveLogImage()\n})\ngame.onUpdate(function () {\n    if (mySprite.top < 0 || mySprite.bottom > scene.screenHeight()) {\n        game.over(false)\n    }\n})\n } \n",
        "tutorialRecipe": false
    },
    "id": "198c9539-e798-4db4-fd9d-9221397ac51f",
    "recentUse": 1563469350,
    "modificationTime": 1563469340,
    "path": "falling-duck",
    "blobCurrent": false,
    "saveId": null,
    "githubCurrent": false
}